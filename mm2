
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

 local Window = Rayfield:CreateWindow({
   Name = "WarFrauds MM2",
   LoadingTitle = "WarFrauds hub",
   LoadingSubtitle = "by Mkstudios",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- 
      FileName = "Warfrauds"
   },
   Discord = {
      Enabled = false,
      Invite = "nbeEBUGY", -- 
      RememberJoins = true -- 
   },
   KeySystem = true, -- 
   KeySettings = {
      Title = "Warfrauds| key",
      Subtitle = "link in discord",
      Note = "go to the keys channel in the discord",
      FileName = "Key", -- 
      SaveKey = false, -- 
      GrabKeyFromSite = true, -- 
      Key = {"https://pastebin.com/raw/3UDbSGAW"} -- 
   }
})

    local MainTab = Window:CreateTab("ðŸ”«Aimbot", nil) -- Title, Image
    local MainSection = MainTab:CreateSection("Section Example")

    Rayfield:Notify({
   Title = "WarFraud hub has been executed",
   Content = "enjoy the best hub!",
   Duration = 6.5,
   Image = nil,
   Actions = { -- Notification Buttons
      Ignore = {
         Name = "Okay!",
         Callback = function()
         print("The user tapped Okay!")
      end
   },
},
})

    local Button = MainTab:CreateButton({
   Name = "Aimbot",
   Callback = function()
   local player = game.Players.LocalPlayer
local Cam = workspace.CurrentCamera
 
-- Toggles setting set to False or True to toggle rejoin if you want to re settings 
local targetTeammates = true  -- Initially, target non-teammates or teammate
local aimbotActive = true  -- Initial state of the aimbot
 
-- Function to check if a player is a teammate
local function isTeammate(targetPlayer)
    return targetPlayer.Team == player.Team
end
 
-- Function to look at a specific position
local function lookAt(targetPosition)
    Cam.CFrame = CFrame.new(Cam.CFrame.Position, targetPosition)
end
 
-- Function to check if a target is visible (not behind walls)
local function isTargetVisible(targetPart)
    local origin = Cam.CFrame.Position
    local direction = (targetPart.Position - origin).Unit
    local ray = Ray.new(origin, direction * 5000)
    local part, position = workspace:FindPartOnRayWithIgnoreList(ray, {player.Character, Cam})
    
    return part and part:IsDescendantOf(targetPart.Parent)
end
 
-- Function to get the closest player to the local player
local function getClosestPlayer(trg_part)
    local nearest = nil
    local lastDistance = math.huge
    local localPlayerPos = player.Character.PrimaryPart.Position
    
    for _, v in pairs(game.Players:GetPlayers()) do
        if v ~= player and v.Character and v.Character:FindFirstChild(trg_part) and v.Character:FindFirstChild("Humanoid") then
            local head = v.Character[trg_part]
            local humanoid = v.Character.Humanoid
            if head and humanoid.Health > 0 then  -- Check if the target is alive
                local distance = (localPlayerPos - head.Position).Magnitude
                
                -- Check visibility, distance, and teammate status
                if distance < lastDistance and isTargetVisible(head) then
                    if (targetTeammates and isTeammate(v)) or (not targetTeammates and not isTeammate(v)) then
                        nearest = v
                        lastDistance = distance
                    end
                end
            end
        end
    end
    
    return nearest
end
 
-- Toggle function to switch between targeting teammates and non-teammates
local function toggleTargetMode()
    targetTeammates = not targetTeammates
    print("Targeting", targetTeammates and "teammates" or "non-teammates")
end
 
-- Function to toggle aimbot activation
local function toggleAimbot()
    aimbotActive = not aimbotActive
    print("Aimbot", aimbotActive and "enabled" or "disabled")
end
 
-- RenderStepped connection to perform aiming
game:GetService("RunService").RenderStepped:Connect(function()
    if aimbotActive then
        local closestPlayer = getClosestPlayer("Head")
        if closestPlayer and closestPlayer.Character and closestPlayer.Character:FindFirstChild("Head") then
            lookAt(closestPlayer.Character.Head.Position)
        end
    end
end)
 
-- Input binding for toggling targeting mode and aimbot (e.g., press 'T' to toggle targeting mode, press 'Y' to toggle aimbot)
game:GetService("UserInputService").InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.Keyboard then
        if input.KeyCode == Enum.KeyCode.T then
            toggleTargetMode()
        elseif input.KeyCode == Enum.KeyCode.Y then
            toggleAimbot()
        end
    end
end)
 
-- Mobile support for toggling aimbot and targeting mode
local UIS = game:GetService("UserInputService")
 
UIS.TouchTap:Connect(function(touchPositions, processed)
    if not processed then
        local touch = touchPositions[1]
        if touch.Position.Y < workspace.CurrentCamera.ViewportSize.Y / 2 then
            toggleAimbot()
        else
            toggleTargetMode()
        end
    end
end)
   end,
})

    local Button = Tab:CreateButton({
   Name = "Esp",
   Callback = function()
   getgenv().Toggle = true -- This toggles the esp, turning it to false will turn it off
getgenv().TC = false -- This toggles team check, turning it on will turn on team check
local PlayerName = "Name" -- You can decide if you want the Player's name to be a display name which is "DisplayName", or username which is "Name"
 
--//Variables\\--
local P = game:GetService("Players")
local LP = P.LocalPlayer
 
--//Debounce\\--
local DB = false
 
--//Notification\\--
game.StarterGui:SetCore("SendNotification", {
    Title = "Notification",
    Text = "Best ESP by Warfraud" ,
    Button1 = "esp",
    Duration = math.huge
})
 
--//Loop\\--
while task.wait() do
    if not getgenv().Toggle then
        break
    end
    if DB then 
        return 
    end
    DB = true
 
    pcall(function()
        for i,v in pairs(P:GetChildren()) do
            if v:IsA("Player") then
                if v ~= LP then
                    if v.Character then
 
                        local pos = math.floor(((LP.Character:FindFirstChild("HumanoidRootPart")).Position - (v.Character:FindFirstChild("HumanoidRootPart")).Position).magnitude)
                        -- Credits to Infinite Yield for this part (pos) ^^^^^^
 
                        if v.Character:FindFirstChild("Totally NOT Esp") == nil and v.Character:FindFirstChild("Icon") == nil and getgenv().TC == false then
                            --//ESP-Highlight\\--
                            local ESP = Instance.new("Highlight", v.Character)
 
                            ESP.Name = "Totally NOT Esp"
                            ESP.Adornee = v.Character
                            ESP.Archivable = true
                            ESP.Enabled = true
                            ESP.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                            ESP.FillColor = v.TeamColor.Color
                            ESP.FillTransparency = 0.5
                            ESP.OutlineColor = Color3.fromRGB(255, 255, 255)
                            ESP.OutlineTransparency = 0
 
                            --//ESP-Text\\--
                            local Icon = Instance.new("BillboardGui", v.Character)
                            local ESPText = Instance.new("TextLabel")
 
                            Icon.Name = "Icon"
                            Icon.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                            Icon.Active = true
                            Icon.AlwaysOnTop = true
                            Icon.ExtentsOffset = Vector3.new(0, 1, 0)
                            Icon.LightInfluence = 1.000
                            Icon.Size = UDim2.new(0, 800, 0, 50)
 
                            ESPText.Name = "ESP Text"
                            ESPText.Parent = Icon
                            ESPText.BackgroundColor3 = v.TeamColor.Color
                            ESPText.BackgroundTransparency = 1.000
                            ESPText.Size = UDim2.new(0, 800, 0, 50)
                            ESPText.Font = Enum.Font.SciFi
                            ESPText.Text = v[PlayerName].." | Distance: "..pos
                            ESPText.TextColor3 = v.TeamColor.Color
                            ESPText.TextSize = 10.800
                            ESPText.TextWrapped = true
                        else
                            if v.TeamColor ~= LP.TeamColor and v.Character:FindFirstChild("Totally NOT Esp") == nil and v.Character:FindFirstChild("Icon") == nil and getgenv().TC == true then
                                --//ESP-Highlight\\--
                                local ESP = Instance.new("Highlight", v.Character)
 
                                ESP.Name = "Totally NOT Esp"
                                ESP.Adornee = v.Character
                                ESP.Archivable = true
                                ESP.Enabled = true
                                ESP.DepthMode = Enum.HighlightDepthMode.AlwaysOnTop
                                ESP.FillColor = v.TeamColor.Color
                                ESP.FillTransparency = 0.5
                                ESP.OutlineColor = Color3.fromRGB(255, 255, 255)
                                ESP.OutlineTransparency = 0
 
                                --//ESP-Text\\--
                                local Icon = Instance.new("BillboardGui", v.Character)
                                local ESPText = Instance.new("TextLabel")
 
                                Icon.Name = "Icon"
                                Icon.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                                Icon.Active = true
                                Icon.AlwaysOnTop = true
                                Icon.ExtentsOffset = Vector3.new(0, 1, 0)
                                Icon.LightInfluence = 1.000
                                Icon.Size = UDim2.new(0, 800, 0, 50)
 
                                ESPText.Name = "ESP Text"
                                ESPText.Parent = Icon
                                ESPText.BackgroundColor3 = v.TeamColor.Color
                                ESPText.BackgroundTransparency = 1.000
                                ESPText.Size = UDim2.new(0, 800, 0, 50)
                                ESPText.Font = Enum.Font.SciFi
                                ESPText.Text = v[PlayerName].." | Distance: "..pos
                                ESPText.TextColor3 = v.TeamColor.Color
                                ESPText.TextSize = 10.800
                                ESPText.TextWrapped = true
                            else
                                if not v.Character:FindFirstChild("Totally NOT Esp").FillColor == v.TeamColor.Color and not v.Character:FindFirstChild("Icon").TextColor3 == v.TeamColor.Color then
                                    v.Character:FindFirstChild("Totally NOT Esp").FillColor = v.TeamColor.Color
                                    v.Character:FindFirstChild("Icon").TextColor3 = v.TeamColor.Color
                                else
                                    if v.Character:FindFirstChild("Totally NOT Esp").Enabled == false and v.Character:FindFirstChild("Icon").Enabled == false then
                                        v.Character:FindFirstChild("Totally NOT Esp").Enabled = true
                                        v.Character:FindFirstChild("Icon").Enabled = true
                                    else
                                        if v.Character:FindFirstChild("Icon") then
                                            v.Character:FindFirstChild("Icon")["ESP Text"].Text = v[PlayerName].." | Distance: "..pos
                                        end
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
 
    wait()
 
    DB = false
end
   end,
})
    
